# leagueSchema.graphqls

# Types

type Team {
    id: ID!
    name: String!
    tla: String
    shortName: String
    areaName: String
    address: String
    players: [Player!]
    coach: Coach
    competitions: [Competition!]
}

type Player {
    id: ID!
    name: String!
    position: String!
    dateOfBirth: String! # Utilizando String para representar LocalDate em GraphQL
    nationality: String
    team: Team
}

type Coach {
    id: ID!
    name: String!
    dateOfBirth: String!  # Representando LocalDate como String
    nationality: String
    team: Team
}

type Competition {
    id: ID!
    name: String!
    code: String
    areaName: String
    teams: [Team!]
}

# Queries
type Query {
    getAllTeams: [Team]
    getTeamById(id: ID!): Team
    getAllPlayers: [Player]
    getPlayerById(id: ID!): Player
    getAllCoaches: [Coach]
    getCoachById(id: ID!): Coach
    getAllCompetitions: [Competition]
    getCompetitionById(id: ID!): Competition
}

# Mutations
type Mutation {
    createTeam(name: String!, address: String, areaName: String, shortName: String, tla: String): Team
    createPlayer(name: String!, position: String!, dateOfBirth: String!, nationality: String, teamId: ID!): Player
    createCoach(name: String!, dateOfBirth: String!, nationality: String, teamId: ID!): Coach
    createCompetition(name: String!): Competition
    addTeamToCompetition(teamId: ID!, competitionId: ID!): Competition
    addPlayerToTeam(playerId: ID!, teamId: ID!): Team
    addCoachToTeam(coachId: ID!, teamId: ID!): Team
}
